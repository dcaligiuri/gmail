{"version":3,"file":"modal.js","sourceRoot":"","sources":["../../../../src/lib/plugins/bootstrap/modal.ts"],"names":[],"mappings":"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","sourcesContent":["import 'rxjs/add/operator/combineLatest';\n\nimport {\n  Injectable,\n  ResolvedReflectiveProvider as RRP\n} from '@angular/core';\n\nimport {\n  Maybe,\n  ContainerContent,\n  Overlay,\n  DialogRef,\n  Modal as Modal_,\n  CSSBackdrop,\n  PromiseCompleter\n} from 'angular2-modal';\n\nimport { BSModalContainer } from './modal-container.component';\n\nimport { OneButtonPresetBuilder } from './../bootstrap/presets/one-button-preset';\nimport { TwoButtonPresetBuilder, PromptPresetBuilder } from './../bootstrap/presets/two-button-preset';\n\n\n@Injectable()\nexport class Modal extends Modal_ {\n  constructor(overlay: Overlay) {\n    super(overlay);\n  }\n\n  alert(): OneButtonPresetBuilder {\n    return new OneButtonPresetBuilder(this, <any>{isBlocking: false});\n  }\n\n  prompt(): PromptPresetBuilder {\n    return new PromptPresetBuilder(this, <any>{isBlocking: true, keyboard: null});\n  }\n\n  confirm(): TwoButtonPresetBuilder {\n    return new TwoButtonPresetBuilder(this, <any>{isBlocking: true, keyboard: null});\n  }\n\n  protected create(dialogRef: DialogRef<any>,\n                   content: ContainerContent,\n                   bindings?: RRP[]): Maybe<DialogRef<any>> {\n\n    const backdropRef = this.createBackdrop(dialogRef, CSSBackdrop);\n    const containerRef = this.createContainer(dialogRef, BSModalContainer, content, bindings);\n\n    let overlay = dialogRef.overlayRef.instance;\n    let backdrop = backdropRef.instance;\n    let container = containerRef.instance;\n\n    dialogRef.inElement ? overlay.insideElement() : overlay.fullscreen();\n\n    // add body class if this is the only dialog in the stack\n    if (!document.body.classList.contains('modal-open')) {\n      document.body.classList.add('modal-open');\n    }\n\n\n    if (dialogRef.inElement) {\n      backdrop.setStyle('position', 'absolute');\n    }\n    backdrop.addClass('modal-backdrop fade', true);\n\n    backdrop.addClass('in');\n    container.addClass('in');\n\n    if (containerRef.location.nativeElement) {\n      containerRef.location.nativeElement.focus();\n    }\n\n    overlay.beforeDestroy(() => {\n      const completer = new PromiseCompleter<void>();\n      backdrop.removeClass('in');\n      container.removeClass('in');\n\n      backdrop.myAnimationEnd$()\n        .combineLatest(container.myAnimationEnd$(), (s1, s2) => [s1,s2] )\n        .subscribe( sources => {\n          this.overlay.groupStackLength(dialogRef) === 1 && document.body.classList.remove('modal-open');\n          completer.resolve();\n        });\n\n      return completer.promise;\n    });\n\n    return dialogRef;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}