{"version":3,"file":"two-button-preset.js","sourceRoot":"","sources":["../../../../../src/lib/plugins/bootstrap/presets/two-button-preset.ts"],"names":[],"mappings":";;;;;AACA,OAAO,EAGL,MAAM,EACN,UAAU,EACX,MAAM,gBAAgB,CAAC;AAExB,OAAO,EAAE,yBAAyB,EAAE,MAAM,wBAAwB,CAAC;AAkBnE,+BAA+B;AAC/B;IAA6D,kDAA0C;IAMrG,wCAAY,KAAY,EAAE,aAA0C,EACxD,cAA6B;QADf,8BAAA,EAAA,yBAA0C;QACxD,+BAAA,EAAA,mBAA6B;eACvC,kBAAM,MAAM,CAAM;YAChB,KAAK,EAAE,KAAK;YACZ,KAAK,EAAE,IAAI;YACX,UAAU,EAAE,iBAAiB;YAC7B,SAAS,EAAE,QAAQ;YACnB,cAAc,EAAE,iBAAiB;SAClC,EAAE,aAAa,IAAI,EAAE,CAAC,EAAE,UAAU,CAAS;YAC1C,OAAO;YACP,YAAY;YACZ,WAAW;YACX,gBAAgB;SACjB,EAAE,cAAc,CAAC,CAAC;IACrB,CAAC;IAED,qDAAY,GAAZ,UAAa,MAAuB;QAClC,IAAI,CAAC,SAAS,CACZ,MAAM,CAAC,cAAc,EACrB,MAAM,CAAC,SAAS,EAChB,UAAC,GAAmB,EAAE,MAAkB,IAAK,OAAA,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,EAApB,CAAoB,CAClE,CAAC;QAEF,MAAM,CAAC,iBAAM,YAAY,YAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IACH,qCAAC;AAAD,CAAC,AA/BD,CAA6D,yBAAyB,GA+BrF;;AAED;;GAEG;AACH;IAA4C,0CAA8B;IAExE,gCAAY,KAAY,EAAE,aAA0C;QAA1C,8BAAA,EAAA,yBAA0C;eAClE,kBAAM,KAAK,EAAE,aAAa,CAAC;IAC7B,CAAC;IAED,6CAAY,GAAZ,UAAa,MAAuB;QAClC,IAAI,CAAC,SAAS,CACZ,MAAM,CAAC,UAAU,EACjB,MAAM,CAAC,KAAK,EACZ,UAAC,GAAmB,EAAE,MAAkB,IAAK,OAAA,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAtB,CAAsB,CACpE,CAAC;QAEF,MAAM,CAAC,iBAAM,YAAY,YAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IACH,6BAAC;AAAD,CAAC,AAfD,CAA4C,8BAA8B,GAezE;;AAWD;IAAyC,uCAA8B;IAIrE,6BAAY,KAAY,EAAE,aAAuC;QAAvC,8BAAA,EAAA,yBAAuC;eAC/D,kBAAM,KAAK,EAAE,MAAM,CAAM,EAAC,SAAS,EAAE,IAAI,EAAE,YAAY,EAAE,EAAE,EAAC,EAAE,aAAa,IAAI,EAAE,CAAC,EAChF,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;IACpC,CAAC;IAED,0CAAY,GAAZ,UAAa,MAAoB;QAC/B,IAAI,CAAC,SAAS,CACZ,MAAM,CAAC,UAAU,EACjB,MAAM,CAAC,KAAK,EACZ,UAAC,GAAmB,EAAE,MAAkB;YACtC,OAAA,GAAG,CAAC,MAAM,CAAC,KAAK,CAAE,GAAG,CAAC,MAAM,CAAC,OAAwB,CAAC,YAAY,CAAC;QAAnE,CAAmE,CACtE,CAAC;QAEF,MAAM,CAAC,iBAAM,YAAY,YAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IACH,0BAAC;AAAD,CAAC,AAnBD,CAAyC,8BAA8B,GAmBtE","sourcesContent":["import { ResolvedReflectiveProvider } from '@angular/core';\nimport {\n  Modal,\n  FluentAssignMethod,\n  extend,\n  arrayUnion\n} from 'angular2-modal';\nimport { BSMessageModal } from '../message-modal.component';\nimport { MessageModalPresetBuilder } from './message-modal-preset';\nimport { OneButtonPreset } from './one-button-preset';\n\n\nexport interface TwoButtonPreset extends OneButtonPreset {\n  /**\n   * Caption for the Cancel button.\n   * Default: Cancel\n   */\n  cancelBtn: string;\n\n  /**\n   * A Class for the Cancel button.\n   * Default: btn btn-default\n   */\n  cancelBtnClass: string;\n}\n\n/** Common two button preset */\nexport abstract class AbstractTwoButtonPresetBuilder extends MessageModalPresetBuilder<TwoButtonPreset> {\n  okBtn: FluentAssignMethod<string, this>;\n  okBtnClass: FluentAssignMethod<string, this>;\n  cancelBtn: FluentAssignMethod<string, this>;\n  cancelBtnClass: FluentAssignMethod<string, this>;\n\n  constructor(modal: Modal, defaultValues: TwoButtonPreset = undefined,\n              initialSetters: string[] = []) {\n    super(extend<any>({\n      modal: modal,\n      okBtn: 'OK',\n      okBtnClass: 'btn btn-primary',\n      cancelBtn: 'Cancel',\n      cancelBtnClass: 'btn btn-default'\n    }, defaultValues || {}), arrayUnion<string>([\n      'okBtn',\n      'okBtnClass',\n      'cancelBtn',\n      'cancelBtnClass',\n    ], initialSetters));\n  }\n\n  $$beforeOpen(config: TwoButtonPreset): ResolvedReflectiveProvider[] {\n    this.addButton(\n      config.cancelBtnClass,\n      config.cancelBtn,\n      (cmp: BSMessageModal, $event: MouseEvent) => cmp.dialog.dismiss()\n    );\n\n    return super.$$beforeOpen(config);\n  }\n}\n\n/**\n * A Preset for a classic 2 button modal window.\n */\nexport class TwoButtonPresetBuilder extends AbstractTwoButtonPresetBuilder {\n\n  constructor(modal: Modal, defaultValues: TwoButtonPreset = undefined) {\n    super(modal, defaultValues);\n  }\n\n  $$beforeOpen(config: TwoButtonPreset): ResolvedReflectiveProvider[] {\n    this.addButton(\n      config.okBtnClass,\n      config.okBtn,\n      (cmp: BSMessageModal, $event: MouseEvent) => cmp.dialog.close(true)\n    );\n\n    return super.$$beforeOpen(config);\n  }\n}\n\nexport interface PromptPreset extends TwoButtonPreset {\n  showInput: boolean;\n  /** Default value shown in the prompt. */\n  defaultValue: string;\n  /** A placeholder for the input element. */\n  placeholder: string;\n\n}\n\nexport class PromptPresetBuilder extends AbstractTwoButtonPresetBuilder {\n  placeholder: FluentAssignMethod<string, this>;\n  defaultValue: FluentAssignMethod<string, this>;\n\n  constructor(modal: Modal, defaultValues: PromptPreset = undefined) {\n    super(modal, extend<any>({showInput: true, defaultValue: ''}, defaultValues || {}),\n      ['placeholder', 'defaultValue']);\n  }\n\n  $$beforeOpen(config: PromptPreset): ResolvedReflectiveProvider[] {\n    this.addButton(\n      config.okBtnClass,\n      config.okBtn,\n      (cmp: BSMessageModal, $event: MouseEvent) =>\n        cmp.dialog.close((cmp.dialog.context as PromptPreset).defaultValue)\n    );\n\n    return super.$$beforeOpen(config);\n  }\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}