{"version":3,"file":"one-button-preset.js","sourceRoot":"","sources":["../../../../../src/lib/plugins/bootstrap/presets/one-button-preset.ts"],"names":[],"mappings":";;;;;AACA,OAAO,EAA6B,MAAM,EAAE,MAAM,gBAAgB,CAAC;AAEnE,OAAO,EAAE,yBAAyB,EAAsB,MAAM,wBAAwB,CAAC;AAgBvF;;GAEG;AACH;IAA4C,0CAA0C;IAIpF,gCAAY,KAAY,EAAE,aAA0C;QAA1C,8BAAA,EAAA,yBAA0C;eAClE,kBAAM,MAAM,CAAM;YAChB,KAAK,EAAE,KAAK;YACZ,KAAK,EAAE,IAAI;YACX,UAAU,EAAE,iBAAiB;SAC9B,EAAE,aAAa,IAAI,EAAE,CAAC,EAAE;YACvB,OAAO;YACP,YAAY;SACb,CAAC;IACJ,CAAC;IAED,6CAAY,GAAZ,UAAa,MAAuB;QAClC,IAAI,CAAC,SAAS,CACZ,MAAM,CAAC,UAAU,EACjB,MAAM,CAAC,KAAK,EACZ,UAAC,GAAmB,EAAE,MAAkB,IAAK,OAAA,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAtB,CAAsB,CACpE,CAAC;QACF,MAAM,CAAC,iBAAM,YAAY,YAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IACH,6BAAC;AAAD,CAAC,AAvBD,CAA4C,yBAAyB,GAuBpE","sourcesContent":["import { ResolvedReflectiveProvider } from '@angular/core';\nimport { Modal, FluentAssignMethod, extend } from 'angular2-modal';\nimport { BSMessageModal } from '../message-modal.component';\nimport { MessageModalPresetBuilder, MessageModalPreset } from './message-modal-preset';\n\nexport interface OneButtonPreset extends MessageModalPreset {\n  /**\n   * Caption for the OK button.\n   * Default: OK\n   */\n  okBtn: string;\n\n  /**\n   * A Class for the OK button.\n   * Default: btn btn-primary\n   */\n  okBtnClass: string;\n}\n\n/**\n * A Preset for a classic 1 button modal window.\n */\nexport class OneButtonPresetBuilder extends MessageModalPresetBuilder<OneButtonPreset> {\n  okBtn: FluentAssignMethod<string, this>;\n  okBtnClass: FluentAssignMethod<string, this>;\n\n  constructor(modal: Modal, defaultValues: OneButtonPreset = undefined) {\n    super(extend<any>({\n      modal: modal,\n      okBtn: 'OK',\n      okBtnClass: 'btn btn-primary'\n    }, defaultValues || {}), [\n      'okBtn',\n      'okBtnClass'\n    ]);\n  }\n\n  $$beforeOpen(config: OneButtonPreset): ResolvedReflectiveProvider[] {\n    this.addButton(\n      config.okBtnClass,\n      config.okBtn,\n      (cmp: BSMessageModal, $event: MouseEvent) => cmp.dialog.close(true)\n    );\n    return super.$$beforeOpen(config);\n  }\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}