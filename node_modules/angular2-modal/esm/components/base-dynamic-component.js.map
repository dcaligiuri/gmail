{"version":3,"file":"base-dynamic-component.js","sourceRoot":"","sources":["../../../src/lib/components/base-dynamic-component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ComponentRef,\n  ElementRef,\n  ResolvedReflectiveProvider,\n  OnDestroy,\n  ViewContainerRef,\n  Renderer\n} from '@angular/core';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/filter';\n\nimport { createComponent, CreateComponentArgs } from '../framework/createComponent';\n\nconst BROWSER_PREFIX = ['webkit', 'moz', 'MS', 'o', ''];\n\nfunction register(eventName, element, cb) {\n  BROWSER_PREFIX.forEach( p => {\n    element.addEventListener(p ? p + eventName : eventName.toLowerCase(), cb, false);\n  });\n}\n\n/**\n * A base class for supporting dynamic components.\n * There are 3 main support areas:\n * 1 - Easy wrapper for dynamic styling via CSS classes and inline styles.\n * 2 - Easy wrapper for interception of transition/animation end events.\n * 3 - Easy wrapper for component creation and injection.\n *\n * Dynamic css is done via direct element manipulation (via renderer), it does not use change detection\n * or binding. This is to allow better control over animation.\n *\n * Animation support is limited, only transition/keyframes END even are notified.\n * The animation support is needed since currently the angular animation module is limited as well and\n * does not support CSS animation that are not pre-parsed and are not in the styles metadata of a component.\n *\n * Capabilities: Add/Remove styls, Add/Remove classes, listen to animation/transition end event,\n * add components\n */\nexport class BaseDynamicComponent implements OnDestroy {\n  animationEnd$: Observable<TransitionEvent | AnimationEvent>;\n\n  protected animationEnd: Subject<TransitionEvent | AnimationEvent>;\n\n  constructor(protected el: ElementRef,\n              protected renderer: Renderer) {}\n  \n  activateAnimationListener() {\n    if (this.animationEnd) return;\n    this.animationEnd = new Subject<TransitionEvent | AnimationEvent>();\n    this.animationEnd$ = this.animationEnd.asObservable();\n    register('TransitionEnd', this.el.nativeElement, (e: TransitionEvent) => this.onEnd(e));\n    register('AnimationEnd', this.el.nativeElement, (e: AnimationEvent) => this.onEnd(e));\n  }\n  /**\n   * Set a specific inline style on the overlay host element.\n   * @param prop The style key\n   * @param value The value, undefined to remove\n   * @returns {ModalOverlay}\n   */\n  setStyle(prop: string, value: string): this {\n    this.renderer.setElementStyle(this.el.nativeElement, prop, value);\n    return this;\n  }\n\n  forceReflow() {\n    this.el.nativeElement.offsetWidth;\n  }\n\n  addClass(css: string, forceReflow: boolean = false): void {\n    css.split(' ')\n      .forEach( c => this.renderer.setElementClass(this.el.nativeElement, c, true) );\n    if (forceReflow) this.forceReflow();\n  }\n\n  removeClass(css: string, forceReflow: boolean = false): void {\n    css.split(' ')\n      .forEach( c => this.renderer.setElementClass(this.el.nativeElement, c, false) );\n    if (forceReflow) this.forceReflow();\n  }\n\n  ngOnDestroy(): void {\n    if (this.animationEnd && !this.animationEnd.closed) {\n      this.animationEnd.complete();\n    }\n  }\n\n  myAnimationEnd$(): Observable<AnimationEvent | TransitionEvent> {\n    return this.animationEnd$\n      .filter( e => e.target === this.el.nativeElement );\n  }\n\n  /**\n   * Add a component, supply a view container ref.\n   * Note: The components vcRef will result in a sibling.\n   * @param component The component to add\n   * @param vcRef The container to add to\n   * @param bindings Bindings to use (added on top of the ViewContainerRef)\n   * @returns {Promise<ComponentRef<any>>}\n   */\n  protected _addComponent<T>(instructions: CreateComponentArgs): ComponentRef<T> {\n    const cmpRef = createComponent(instructions);\n    cmpRef.changeDetectorRef.detectChanges();\n\n    return cmpRef;\n  }\n\n\n  private onEnd(event: TransitionEvent | AnimationEvent): void {\n\n    if (!this.animationEnd.closed) {\n      this.animationEnd.next(event);\n    }\n  }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}