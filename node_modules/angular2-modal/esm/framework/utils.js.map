{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/lib/framework/utils.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AACH,AANA;;;;;GAKG,CACH,MAAM,iBAAoB,EAAO,EAAE,EAAO;IACxC,IAAI,CAAC,GAAS,EAAE,CAAC;IACjB,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;QACpB,EAAE,CAAC,CAAC,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACtB,CAAE,CAAC,IAAI,CAAC,GAAS,EAAG,CAAC,IAAI,CAAC,CAAC;QACnC,CAAC;IACH,CAAC;IAED,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;QACpB,EAAE,CAAC,CAAC,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACtB,CAAE,CAAC,IAAI,CAAC,GAAS,EAAG,CAAC,IAAI,CAAC,CAAC;QACnC,CAAC;IACH,CAAC;IAED,MAAM,CAAC,CAAC,CAAC;AACX,CAAC;AAED;;;;;GAKG;AACH,MAAM,qBAAwB,IAAW,EAAE,IAAW;IACpD,MAAM,CAAC,IAAI;SACR,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAtB,CAAsB,CAAC,CAAC,CAAC;AAEtD,CAAC;AAED;;;;GAIG;AACH,MAAM,sBAAsB,OAAe,EAAE,MAAqB;IAChE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAAC,MAAM,CAAC,MAAM,KAAK,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC;IAClE,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;AACtC,CAAC;AAED;;;;;;;;;;;;;;;;GAgBG;AACH,MAAM,wBAAwB,GAA8B;IAC1D,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,GAAG,CAAC;SACnC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAG,CAAC,SAAI,GAAG,CAAC,CAAC,CAAG,EAAhB,CAAgB,CAAC;SAC1B,IAAI,CAAC,GAAG,CAAC,CAAC;IAEb,oCAAoC;IACpC,6CAA6C;IAC7C,0BAA0B;IAC1B,0BAA0B;AAC5B,CAAC;AAED;IAKE;QAAA,iBAKC;QAJC,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,UAAC,GAAG,EAAE,GAAG;YAClC,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC;YACnB,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IACH,uBAAC;AAAD,CAAC,AAXD,IAWC;;AAQD,MAAM,mBAAmB,CAAC","sourcesContent":["/**\n * Simple object extend\n * @param m1\n * @param m2\n * @returns {{}}\n */\nexport function extend<T>(m1: any, m2: any): T {\n  var m: T = <T>{};\n  for (var attr in m1) {\n    if (m1.hasOwnProperty(attr)) {\n      (<any>m)[attr] = (<any>m1)[attr];\n    }\n  }\n\n  for (var attr in m2) {\n    if (m2.hasOwnProperty(attr)) {\n      (<any>m)[attr] = (<any>m2)[attr];\n    }\n  }\n\n  return m;\n}\n\n/**\n * Simple, not optimized, array union of unique values.\n * @param arr1\n * @param arr2\n * @returns {T[]|any[]|any[][]|any[]}\n */\nexport function arrayUnion<T>(arr1: any[], arr2: any[]): T[] {\n  return arr1\n    .concat(arr2.filter(v => arr1.indexOf(v) === -1));\n\n}\n\n/**\n * Returns true if the config supports a given key.\n * @param key\n * @returns {boolean}\n */\nexport function supportsKey(keyCode: number, config: Array<number>): boolean {\n  if (!Array.isArray(config)) return config === null ? false : true;\n  return config.indexOf(keyCode) > -1;\n}\n\n/**\n * Given an object representing a key/value map of css properties, returns a valid css string\n * representing the object.\n * Example:\n * console.log(toStyleString({\n *     position: 'absolute',\n *     width: '100%',\n *     height: '100%',\n *     top: '0',\n *     left: '0',\n *     right: '0',\n *     bottom: '0'\n * }));\n * // position:absolute;width:100%;height:100%;top:0;left:0;right:0;bottom:0\n * @param obj\n * @returns {string}\n */\nexport function toStyleString(obj: any | CSSStyleDeclaration): string {\n  return Object.getOwnPropertyNames(obj)\n    .map(k => `${k}:${obj[k]}`)\n    .join(';');\n\n  // let objStr = JSON.stringify(obj);\n  // return objStr.substr(1, objStr.length - 2)\n  //     .replace(/,/g, ';')\n  //     .replace(/\"/g, '');\n}\n\nexport class PromiseCompleter<R> {\n  promise: Promise<R>;\n  resolve: (value?: R|PromiseLike<R>) => void;\n  reject: (error?: any, stackTrace?: string) => void;\n\n  constructor() {\n    this.promise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n}\n\nexport interface Class<T> {\n  new(...args: any[]): T;\n}\n\nexport type Maybe<T> = T | Promise<T>;\n\nexport function noop() { }\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}