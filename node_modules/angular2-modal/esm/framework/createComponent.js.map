{"version":3,"file":"createComponent.js","sourceRoot":"","sources":["../../../src/lib/framework/createComponent.ts"],"names":[],"mappings":"AAAA,OAAO,EAEL,wBAAwB,EAGxB,kBAAkB,EAEnB,MAAM,eAAe,CAAC;AAUvB,MAAM,0BAA0B,YAAiC;IAC/D,IAAI,QAAQ,GAAa,WAAW,CAAC,YAAY,CAAC,CAAC;IACnD,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,CACvC,QAAQ,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,uBAAuB,CAAC,YAAY,CAAC,SAAS,CAAC,EACtF,YAAY,CAAC,KAAK,CAAC,MAAM,EACzB,QAAQ,EACR,YAAY,CAAC,gBAAgB,CAC9B,CAAC;AACJ,CAAC;AAED,qBAAqB,YAAiC;IACpD,IAAM,WAAW,GAAG,YAAY,CAAC,QAAQ,IAAI,YAAY,CAAC,KAAK,CAAC,cAAc,CAAC;IAC/E,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,YAAY,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC;QAC7E,kBAAkB,CAAC,qBAAqB,CAAC,YAAY,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,WAAW,CAAC;AAE/F,CAAC","sourcesContent":["import {\n  ComponentRef,\n  ComponentFactoryResolver,\n  Injector,\n  ViewContainerRef,\n  ReflectiveInjector,\n  ResolvedReflectiveProvider\n} from '@angular/core';\n\nexport interface CreateComponentArgs {\n  component: any;\n  vcRef: ViewContainerRef;\n  injector?: Injector;\n  bindings?: ResolvedReflectiveProvider[];\n  projectableNodes?: any[][];\n}\n\nexport function createComponent(instructions: CreateComponentArgs): ComponentRef<any> {\n  let injector: Injector = getInjector(instructions);\n  return instructions.vcRef.createComponent(\n    injector.get(ComponentFactoryResolver).resolveComponentFactory(instructions.component),\n    instructions.vcRef.length,\n    injector,\n    instructions.projectableNodes\n  );\n}\n\nfunction getInjector(instructions: CreateComponentArgs) {\n  const ctxInjector = instructions.injector || instructions.vcRef.parentInjector;\n  return Array.isArray(instructions.bindings) && instructions.bindings.length > 0 ?\n    ReflectiveInjector.fromResolvedProviders(instructions.bindings, ctxInjector) : ctxInjector;\n\n}\n\n// export function createComponent(cfr: ComponentFactoryResolver,\n//                                         type: any,\n//                                         vcr: ViewContainerRef,\n//                                         bindings: ResolvedReflectiveProvider[],\n//                                         projectableNodes?: any[][]): ComponentRef<any> {\n//   return vcr.createComponent(\n//     cfr.resolveComponentFactory(type),\n//     vcr.length,\n//     getInjector(vcr, bindings),\n//     projectableNodes\n//   );\n// }\n//\n// function getInjector(viewContainer: ViewContainerRef, bindings: ResolvedReflectiveProvider[]) {\n//   const ctxInjector = viewContainer.parentInjector;\n//   return Array.isArray(bindings) && bindings.length > 0 ?\n//     ReflectiveInjector.fromResolvedProviders(bindings, ctxInjector) : ctxInjector;\n//\n// }\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}