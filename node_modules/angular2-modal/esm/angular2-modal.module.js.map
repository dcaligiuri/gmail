{"version":3,"file":"angular2-modal.module.js","sourceRoot":"","sources":["../../src/lib/angular2-modal.module.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,4BAA4B,EAAE,QAAQ,EAA6B,MAAM,eAAe,CAAC;AAClG,OAAO,EAAE,qBAAqB,EAAE,MAAM,2BAA2B,CAAC;AAElE,OAAO,EAAE,qBAAqB,EAAE,kBAAkB,EAAE,MAAM,mBAAmB,CAAC;AAC9E,OAAO,EAAE,eAAe,EAAE,MAAM,iBAAiB,CAAC;AAClD,OAAO,EAAE,sBAAsB,EAAE,WAAW,EAAE,kBAAkB,EAAE,MAAM,oBAAoB,CAAC;AAC7F,OAAO,EACL,OAAO,EACP,YAAY,EACZ,qBAAqB,EACrB,aAAa,EACb,oBAAoB,EACrB,MAAM,iBAAiB,CAAC;AA0BzB,IAAa,WAAW;IAAxB;IAkCA,CAAC;IAhCC;;;;;;OAMG;IACI,0BAAc,GAArB,UAAsB,eAAyC;QAC7D,MAAM,CAAC;YACL,QAAQ,EAAE,aAAW;YACrB,SAAS,EAAE;gBACT,EAAC,OAAO,EAAE,4BAA4B,EAAE,QAAQ,EAAE,eAAe,EAAE,KAAK,EAAE,IAAI,EAAC;aAChF;SACF,CAAA;IACH,CAAC;IAED;;;;OAIG;IACI,mBAAO,GAAd,UAAe,eAA0C;QACvD,MAAM,CAAC;YACL,QAAQ,EAAE,aAAW;YACrB,SAAS,EAAE;gBACT,OAAO;gBACP,EAAC,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,kBAAkB,EAAC;gBACxD,EAAC,OAAO,EAAE,qBAAqB,EAAE,QAAQ,EAAE,qBAAqB,EAAE,KAAK,EAAE,IAAI,EAAC;gBAC9E,EAAC,OAAO,EAAE,4BAA4B,EAAE,QAAQ,EAAE,eAAe,IAAI,EAAE,EAAE,KAAK,EAAE,IAAI,EAAC;aACtF;SACF,CAAC;IACJ,CAAC;IACH,kBAAC;AAAD,CAAC,AAlCD,IAkCC;AAlCY,WAAW;IAxBvB,QAAQ,CAAC;QACR,YAAY,EAAE;YACZ,YAAY;YACZ,sBAAsB;YACtB,WAAW;YACX,kBAAkB;YAClB,qBAAqB;YACrB,aAAa;YACb,oBAAoB;SACrB;QACD,OAAO,EAAE;YACP,WAAW;YACX,kBAAkB;YAClB,sBAAsB;YACtB,qBAAqB;YACrB,aAAa;YACb,oBAAoB;SACrB;QACD,eAAe,EAAE;YACf,YAAY;YACZ,WAAW;YACX,kBAAkB;SACnB;KACF,CAAC;GACW,WAAW,CAkCvB;SAlCY,WAAW","sourcesContent":["import { ANALYZE_FOR_ENTRY_COMPONENTS, NgModule, ModuleWithProviders, Type } from '@angular/core';\nimport { EVENT_MANAGER_PLUGINS } from '@angular/platform-browser';\n\nimport { DOMOutsideEventPlugin, DOMOverlayRenderer } from './providers/index';\nimport { OverlayRenderer } from './models/tokens';\nimport { SwapComponentDirective, CSSBackdrop, CSSDialogContainer } from './components/index';\nimport {\n  Overlay,\n  ModalOverlay,\n  OverlayDialogBoundary,\n  OverlayTarget,\n  DefaultOverlayTarget\n} from './overlay/index';\n\n@NgModule({\n  declarations: [\n    ModalOverlay,\n    SwapComponentDirective,\n    CSSBackdrop,\n    CSSDialogContainer,\n    OverlayDialogBoundary,\n    OverlayTarget,\n    DefaultOverlayTarget\n  ],\n  exports: [\n    CSSBackdrop,\n    CSSDialogContainer,\n    SwapComponentDirective,\n    OverlayDialogBoundary,\n    OverlayTarget,\n    DefaultOverlayTarget\n  ],\n  entryComponents: [\n    ModalOverlay,\n    CSSBackdrop,\n    CSSDialogContainer\n  ]\n})\nexport class ModalModule {\n\n  /**\n   * Returns a ModalModule pre-loaded with a list of dynamically inserted components.\n   * Since dynamic components are not analysed by the angular compiler they must register manually\n   * using entryComponents, this is an easy way to do it.\n   * @param entryComponents A list of dynamically inserted components (dialog's).\n   * @returns {{ngModule: ModalModule, providers: {provide: OpaqueToken, useValue: Array<Type|any[]>, multi: boolean}[]}}\n   */\n  static withComponents(entryComponents: Array<Type<any> | any[]>): ModuleWithProviders {\n    return {\n      ngModule: ModalModule,\n      providers: [\n        {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: entryComponents, multi: true}\n      ]\n    }\n  }\n\n  /**\n   * Returns a NgModule for use in the root Module.\n   * @param entryComponents A list of dynamically inserted components (dialog's).\n   * @returns ModuleWithProviders\n   */\n  static forRoot(entryComponents?: Array<Type<any> | any[]>): ModuleWithProviders {\n    return {\n      ngModule: ModalModule,\n      providers: [\n        Overlay,\n        {provide: OverlayRenderer, useClass: DOMOverlayRenderer},\n        {provide: EVENT_MANAGER_PLUGINS, useClass: DOMOutsideEventPlugin, multi: true},\n        {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: entryComponents || [], multi: true}\n      ]\n    };\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}